# Default values for chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This chart is to be used for standalone deployment
# for development purposes.  AppName and any configMap
# should not have the same name as app already deployed
# in the same namespace by the 3pa parent chart.

replicas: 1

appName: unzip-and-ingest-test

global:
  dockerRepository: nexus-docker-public-hosted.ossim.io
  imagePullSecret:
    registry: nexus-3pa-dev-docker-proxy.ossim.io
    username: radiantcibot
    password: lhLvXspFyX9wraf6jB1I
  hostname: omar-3pa-dev.ossim.io

  createIngress: true
  useTls: false
  useTLSClientAuth: false
  sslCertSecretName: null
  authSslCertSecretName: null

  createImagePullSecret: true
  useImagePullSecret: true

  createHpa: true
  createPVs: true #True to create the pvcs
  useSpringConfigServer: false

  # This is used in the helper to create the pvcs
  volumes:
    maxar-blacksky-data:
      type: nfs
      nfsServer:  10.70.40.254
      nfsMountPoint: /omar-3pa-dev-nfs/3pa-blacksky
      accessModes:
        - ReadWriteMany
      size: 500Gi
      mountPath: /3pa-blacksky

    maxar-skysat-data:
      type: nfs
      nfsServer: 10.70.40.254
      nfsMountPoint: /omar-3pa-dev-nfs/3pa-skysat
      accessModes:
        - ReadWriteMany
      size: 500Gi
      mountPath: /3pa-skysat

      #add elevation

# These are used in the helper to create the pvcs, if no mounts are needed remove
volumeNames:
  - maxar-blacksky-data
  - maxar-skysat-data

# This is overwritten by skaffold, if override is specified
# in the skaffold.yaml
image:
  name: unzip-and-ingest
  tag: kasey
  pullPolicy: Always

internalPort: 8080
externalPort: 8080

readinessProbe:
  path: /health
  port: 8080
  initialDelaySeconds: 5
  timeoutSeconds: 3
livenessProbe:
  path: /health
  port: 8080
  initialDelaySeconds: 5
  timeoutSeconds: 3
  failureThreshold: 10

sqsQueueArn: "arn:aws:sqs:us-east-1:320588532383:testDelay"
ingestAlertQueueArn: "arn:aws:sqs:us-east-1:320588532383:ingestAlert"

baseUrl: https://omar-3pa-dev.ossim.io

wfsBaseUrl: https://omar-3pa-dev.ossim.io/
wfsPostPrefix: "omar-wfs/wfs/getFeature?maxFeatures=1&outputFormat=JSON&propertyName=filename&resultType=results&request=GetFeature&service=WFS&typeName=omar:raster_entry&filter=filename=%27"
wfsFilenamePrefix: /data

mountBuckets:
  - maxar-blacksky-data
  - maxar-skysat-data
