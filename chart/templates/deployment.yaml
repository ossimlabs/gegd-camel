apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.appName }}"
spec:
  selector:
    matchLabels:
      app: "{{ .Values.appName }}"
  template:
    metadata:
      labels:
        app: "{{ .Values.appName }}"
    spec:
      containers:
        - name: "{{ .Values.appName }}"
          image: "{{ .Values.global.dockerRepository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 3
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 3
            failureThreshold: 10
          volumeMounts:
            - mountPath: "{{ .Values.volumeMountPathBlackSky }}"
              name: "{{ .Values.volumeNameBlackSky }}"
            - mountPath: "{{ .Values.volumeMountPathSkySat }}"
              name: "{{ .Values.volumeNameSkySat }}"
      volumes:
        - name: "{{ .Values.volumeNameBlackSky }}"
          persistentVolumeClaim:
            claimName: "{{ .Values.appName }}-{{ .Values.volumeNameBlackSky }}-pvc"
        - name: "{{ .Values.volumeNameSkySat }}"
          persistentVolumeClaim:
            claimName: "{{ .Values.appName }}-{{ .Values.volumeNameSkySat }}-pvc"